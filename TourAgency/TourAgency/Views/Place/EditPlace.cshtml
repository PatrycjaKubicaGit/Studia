@model TourAgency.ViewModels.PlaceViewModel
@{
    ViewBag.Title = "Edytuj Miejsce";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Miejsce Pobytu</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.PlaceId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, Enum.GetValues(typeof(TypModel)).Cast<TypModel>().Select(v => new SelectListItem
            {
            Text = v.ToString(),
            Value = ((int)v).ToString()
            }), "Wybierz typ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistanceFromSea, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DistanceFromSea)
                @Html.ValidationMessageFor(model => model.DistanceFromSea)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pool, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pool)
                @Html.ValidationMessageFor(model => model.Pool)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Carpark, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Carpark)
                @Html.ValidationMessageFor(model => model.Carpark)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street)
                @Html.ValidationMessageFor(model => model.Street)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocalNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocalNumber)
                @Html.ValidationMessageFor(model => model.LocalNumber)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Miejsce Pobytu List", "Index")
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}
