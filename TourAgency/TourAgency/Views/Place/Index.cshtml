@model TourAgency.ViewModelPages.PlaceViewModelPages

@{
    ViewData["Title"] = "Index";
}

<h2>Miejsca Pobytu</h2>
@if (User.IsInRole("Admin") || User.IsInRole("Manager"))
{
    <p>
        @Html.ActionLink("Dodaj Miejsce Pobytu", "AddPLace")
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().PlaceId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().DistanceFromSea)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Pool)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Carpark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().LocalNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Places.First().Trips)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Places)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PlaceId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DistanceFromSea)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pool)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Carpark)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LocalNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trips)
                </td>
                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Manager")))
                {
                    <td>
                        @Html.ActionLink("Edit", "EditPlace", new { PlaceId = item.PlaceId }) |
                        @Html.ActionLink("Delete", "DeletePlace", new { PlaceId = item.PlaceId })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<div>
    Strona @(Model.CurrentPage) z @((int)Math.Ceiling((double)Model.TotalPlaces / Model.PageSize))
</div>
<div>
    @if (Model.CurrentPage > 1)
    {
        <a asp-action="Index" asp-controller="Place" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">Poprzednia strona</a>
    }

    @if (Model.CurrentPage < (int)Math.Ceiling((double)Model.TotalPlaces / Model.PageSize))
    {
        <a asp-action="Index" asp-controller="Place" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">Następna strona</a>
    }
</div>

<div>
    <form asp-action="Index" asp-controller="Place" method="get">
        <label for="pageSize">Miejsca na stronę:</label>
        <select id="pageSize" name="pageSize">
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
        <input type="submit" value="Zastosuj" />
    </form>
</div>
